import gmpy2
pub = []
with open("pub.txt") as f:
    for i in f:
        pub.append(int(i))

A = 11243098275181678343
B = 335428611041311731398614259824482604248524861615176787429946575184146370361110652887115402376826444538743339055691850202034085349274540292019392290484025358504275054761608502214481606484088807087063751542648223811793597463026662881020647708165593980984857948283181770647446888695205803952635117800114545071259

'''
for i in range(len(pub) - 1, 0, -1):
    if pub[i] % A:
        print(i)
        break
'''


# to index 61, 61 do not fix
t = pub[62] // A
# print(t)  # check pass
t = t * 2  # key[61] check pass

'''
for i in range(60, -1, -1):
    print(i)
    if (t * 2) % B == pub[i]:
        t = t * 2
        assert((t * 2) % B == pub[i])
    else:
        t = t * 2 + 1
        assert((t * 2 + 1) % B == pub[i])
'''
t = t * 2  # key[60] check pass
t = t * 2 + 1  # key[59]
t = t * 2  # key[58]
t = t * 2 + 1  # key[57]
t = t * 2  # key[56]
t = t * 2  # key[55]
t = t * 2  # key[54]
t = t * 2  # key[53]
t = t * 2  # key[52]
t = t * 2 + 1  # key[51]
t = t * 2  # key[50]
t = t * 2 + 1  # key[49]
t = t * 2  # key[48]
t = t * 2  # key[47]
t = t * 2  # key[46]
t = t * 2 + 1  # key[45]
t = t * 2 + 1  # key[44]
t = t * 2  # key[43]
t = t * 2 + 1  # key[42]
t = t * 2 + 1  # key[41]
t = t * 2  # key[40]
t = t * 2  # key[39]
t = t * 2  # key[38]
t = t * 2  # key[37]
t = t * 2  # key[36]
t = t * 2 + 1  # key[35]
t = t * 2  # key[34]
t = t * 2  # key[33]
t = t * 2  # key[32]
t = t * 2  # key[31]
t = t * 2 + 1  # key[30]
t = t * 2 + 1  # key[29]
t = t * 2 + 1  # key[28]
t = t * 2 + 1  # key[27]
t = t * 2 + 1  # key[26]
t = t * 2  # key[25]
t = t * 2  # key[24]
t = t * 2 + 1  # key[23]
t = t * 2  # key[22]
t = t * 2  # key[21]
t = t * 2  # key[20]
t = t * 2 + 1  # key[19]
t = t * 2  # key[18]
t = t * 2 + 1  # key[17]
t = t * 2 + 1  # key[16]
t = t * 2 + 1  # key[15]
t = t * 2 + 1  # key[14]
t = t * 2  # key[13]
t = t * 2  # key[12]
t = t * 2 + 1  # key[11]
t = t * 2 + 1  # key[10]
t = t * 2  # key[9]
t = t * 2  # key[8]
t = t * 2 + 1  # key[7]
t = t * 2  # key[6]
t = t * 2 + 1  # key[5]
t = t * 2 + 1  # key[4]
t = t * 2  # key[3]
t = t * 2  # key[2]
t = t * 2 + 1  # key[1]
t = t * 2 + 1  # key[0]
assert(t * A % B == pub[0])
t = t * 2 + 1
print(t)
# Rn = 157044819460920609092467276448173243046272265932395367797126659206933701897039194046126042120269324614929149097211430338433289814361618334177766079893108228193848061508207970480631057198943050969215294977267391444325437807630598784114031785096865668654874543550270197240765201945366655376235757299716631009639
print(len(bin(t)[2:]))
