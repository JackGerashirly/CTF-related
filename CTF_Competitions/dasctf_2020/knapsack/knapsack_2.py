from Cryptodome.Util.number import *


def genKey():
    A = 11243098275181678343
    B = 335428611041311731398614259824482604248524861615176787429946575184146370361110652887115402376826444538743339055691850202034085349274540292019392290484025358504275054761608502214481606484088807087063751542648223811793597463026662881020647708165593980984857948283181770647446888695205803952635117800114545071259

    Rn = 157044819460920609092467276448173243046272265932395367797126659206933701897039194046126042120269324614929149097211430338433289814361618334177766079893108228193848061508207970480631057198943050969215294977267391444325437807630598784114031785096865668654874543550270197240765201945366655376235757299716631009639

    key1 = [Rn//2**i for i in range(1, 1015+1)]
    return key1

cipher = 97397993822862742715140448576425545478781886585758950615214868802725174757445950359248638099400716485968012172252912384793381226980773011956648037492935477876165272436101053803930168753674434283739874944427250543520393497134899311820587267198449297688467021182339217847435072421561575557509736616050329617655
key = genKey()
# print(len(key))  # check pass
res = ""
for i in range(1015):
    if cipher // key[i]:
        res += '1'
    else:
        res += '0'
    cipher = cipher % key[i]
print(len(res))  # check pass
res = int(res, 2)
print(long_to_bytes(res))

